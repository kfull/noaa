cd
setwd("~/2017_coursera/noaa")
devtools::document()
devtools::document()
devtools::document()
devtools::use_vignette("noaa_overview")
?geom_point
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn=-1)
library(noaa)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(chron)
library(ggplot2)
library(grid)
library(scales)
library(utils)
library(leaflet)
setwd(system.file("extdata", package = "noaa"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn=-1)
library(noaa)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(chron)
library(ggplot2)
library(grid)
library(scales)
library(utils)
library(leaflet)
setwd(system.file("extdata", package = "noaa"))
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read NOAA data
data <- read_delim("signif.txt", "\t")
# clean NOAA data
data <- eq_clean_data(data)
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
setwd(system.file("extdata", package = "noaa"))
data <- readr::read_delim("signif.txt", "\t") %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(dataset, ggplot2::aes(DATE,
colour = TOTAL_DEATHS,
y = COUNTRY,
size = as.numeric(EQ_PRIMARY) )) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = dataset$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
setwd(system.file("extdata", package = "noaa"))
data <- readr::read_delim("signif.txt", "\t") %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(data, ggplot2::aes(DATE,
colour = TOTAL_DEATHS,
y = COUNTRY,
size = as.numeric(EQ_PRIMARY) )) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = dataset$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
setwd(system.file("extdata", package = "noaa"))
data <- readr::read_delim("signif.txt", "\t") %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(data, ggplot2::aes(DATE,
colour = TOTAL_DEATHS,
y = COUNTRY,
size = as.numeric(EQ_PRIMARY) )) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = dataset$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- readr::read_delim("signif.txt", "\t") %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(data, ggplot2::aes(DATE,
colour = TOTAL_DEATHS,
y = COUNTRY,
size = as.numeric(EQ_PRIMARY) )) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = dataset$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(data, ggplot2::aes(DATE,
colour = TOTAL_DEATHS,
y = COUNTRY,
size = as.numeric(EQ_PRIMARY) )) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = data$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(data, ggplot2::aes(DATE,
colour = as.numeric(TOTAL_DEATHS=,
y = COUNTRY,
size = as.numeric(EQ_PRIMARY))) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = data$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2000)
# plot NOAA data
ggplot2::ggplot(data, ggplot2::aes(DATE,
colour = as.numeric(TOTAL_DEATHS),
y = COUNTRY,
size = as.numeric(EQ_PRIMARY))) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = data$LOCATION_NAME)) +
ggplot2::guides(size = ggplot2::guide_legend(title = "Richter Scale")) +
ggplot2::scale_colour_continuous(name = "Number of Deaths") +
ggplot2::theme_classic()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- readr::read_delim("signif.txt", "\t") %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY == "MEXICO", YEAR > 2000)
# create HTML labels
data <- data %>%
dplyr::mutate(html_label = eq_create_label(.))
# map and annotate NOAA data
eq_map(data, annot_col = "html_label")
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- readr::read_delim("signif.txt", "\t") %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "MEXICO", YEAR > 2000)
# create HTML labels
data <- data %>%
dplyr::mutate(html_label = eq_create_label(.))
# map and annotate NOAA data
eq_map(data, annot_col = "html_label")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
eq_map(data, annot_col = "html_label")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
# set working directory
setwd(system.file("extdata", package = "noaa"))
# read and clean NOAA data
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
devtools::document()
devtools::build_vignettes()
devtools::check()
source('~/2017_coursera/noaa/tests/testthat.R', echo=TRUE)
devtools::test()
devtools::test()
eq_clean_data()
typeof(eq_location_clean())
?julian.default
devtools::document()
devtools::check()
?julian.default
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::test()
devtools::test()
setwd(system.file("extdata", package = "noaa"))
data <- read_delim("signif.txt", "\t") %>%
eq_clean_data()
data[, DATE]
typeof(data)
devtools
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check/()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
spec(...)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
